"""empty message

Revision ID: e28d07d1e9bf
Revises: f1b8d4ac9c3e
Create Date: 2025-10-29 20:22:34.094620

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e28d07d1e9bf'
down_revision = 'f1b8d4ac9c3e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('backup_job_tape', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_job_tape_sequence'))

    op.drop_table('backup_job_tape')
    with op.batch_alter_table('backup_job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_job_expires_at'))
        batch_op.drop_index(batch_op.f('ix_backup_job_job_date'))

    op.drop_table('backup_job')
    with op.batch_alter_table('backup_audit_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_audit_log_created_at'))
        batch_op.drop_index(batch_op.f('ix_backup_audit_log_entity'))
        batch_op.drop_constraint(batch_op.f('fk_backup_audit_user'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['changed_by_user_id'], ['id'])

    with op.batch_alter_table('backup_tape_cartridge', schema=None) as batch_op:
        batch_op.add_column(sa.Column('medium_type', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('serial_number', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('manufacturer', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('model_name', sa.String(length=120), nullable=True))
        batch_op.add_column(sa.Column('retention_days', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('retention_start_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('retention_until', sa.DateTime(), nullable=True))
        batch_op.alter_column('lto_generation',
               existing_type=sa.VARCHAR(length=16),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_backup_tape_cartridge_status'))

    with op.batch_alter_table('backup_tape_custody', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_tape_custody_event_time'))
        batch_op.drop_constraint(batch_op.f('fk_backup_custody_user'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by_user_id'], ['id'])

    with op.batch_alter_table('backup_tape_location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_tape_location_is_current'))
        batch_op.drop_index(batch_op.f('ix_backup_tape_location_tape_id'))
        batch_op.drop_constraint(batch_op.f('fk_backup_location_user'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['created_by_user_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('backup_tape_location', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_backup_location_user'), 'user', ['created_by_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('ix_backup_tape_location_tape_id'), ['tape_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_backup_tape_location_is_current'), ['is_current'], unique=False)

    with op.batch_alter_table('backup_tape_custody', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_backup_custody_user'), 'user', ['created_by_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('ix_backup_tape_custody_event_time'), ['event_time'], unique=False)

    with op.batch_alter_table('backup_tape_cartridge', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_tape_cartridge_status'), ['status'], unique=False)
        batch_op.alter_column('lto_generation',
               existing_type=sa.VARCHAR(length=16),
               nullable=False)
        batch_op.drop_column('retention_until')
        batch_op.drop_column('retention_start_at')
        batch_op.drop_column('retention_days')
        batch_op.drop_column('model_name')
        batch_op.drop_column('manufacturer')
        batch_op.drop_column('serial_number')
        batch_op.drop_column('medium_type')

    with op.batch_alter_table('backup_audit_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_backup_audit_user'), 'user', ['changed_by_user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('ix_backup_audit_log_entity'), ['entity_type', 'entity_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_backup_audit_log_created_at'), ['created_at'], unique=False)

    op.create_table('backup_job',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('backup_job_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('job_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('retention_days', sa.INTEGER(), server_default=sa.text('30'), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('total_files', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_size_bytes', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('verify_result', sa.VARCHAR(length=32), autoincrement=False, nullable=True),
    sa.Column('source_system', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('responsible_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['user.id'], name='fk_backup_job_responsible_user', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='backup_job_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('backup_job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_job_job_date'), ['job_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_backup_job_expires_at'), ['expires_at'], unique=False)

    op.create_table('backup_job_tape',
    sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tape_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sequence', sa.INTEGER(), server_default=sa.text('1'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['backup_job.id'], name=op.f('fk_backup_job_tape_job'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tape_id'], ['backup_tape_cartridge.id'], name=op.f('fk_backup_job_tape_tape'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('job_id', 'tape_id', name=op.f('uq_backup_job_tape_membership'))
    )
    with op.batch_alter_table('backup_job_tape', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_job_tape_sequence'), ['sequence'], unique=False)

    # ### end Alembic commands ###
